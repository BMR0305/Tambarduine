
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNCOMPAREleftNEleftLTLTEGTGTEleftPLUSMINUSleftTIMESDIVIDEDIVIDE_EleftMODULEleftEXPONENTleftLPARENTRPARENTA ABANICO ASSIGN B COMMA COMPARE CUANDO D DEF DIVIDE DIVIDE_E DOT EC ELSE ET EXEC EXPONENT F FALSE FEC FOR GOLPE GT GTE I ID IF LBRACKET LPARENT LT LTE METRONOMO MINUS MODULE NE NEG NUMBER_F NUMBER_I PERCUTOR PLUS PRIN PRINT RBRACKET RPARENT SEMICOLOM SET SN SPACE STEP STRING T TIMES TO TRUE TYPE VERTICAL VIBRATOprogram : prinDecl program\n\t\t\t | functionDecl program\n\t\t\t | empty emptyprinDecl : DEF PRIN LPARENT RPARENT LBRACKET statementList RBRACKETfunctionDecl : DEF ID LPARENT varList RPARENT LBRACKET statementList RBRACKETstatementList : statement statementList : statementList statement statement : SET ID COMMA TRUE SEMICOLOM\n    \t\t\t| SET ID COMMA FALSE SEMICOLOM\n    \t\t\t| SET ID COMMA expression SEMICOLOMstatement : EXEC ID LPARENT varList RPARENT SEMICOLOMstatement : TYPE LPARENT ID RPARENT SEMICOLOMstatement : IF conditionif LBRACKET statementList RBRACKET empty\n                 | IF conditionif LBRACKET statementList RBRACKET ELSE LBRACKET statementList RBRACKET statement : FOR ID TO expression STEP NUMBER_I LBRACKET statementList RBRACKET\n    \t\t\t| FOR ID TO expression empty empty LBRACKET statementList RBRACKETstatement : EC inCaseLista SN LBRACKET statementList RBRACKET FEC SEMICOLOM\n\t                 | EC ID inCaseListb SN LBRACKET statementList RBRACKET FEC SEMICOLOMstatement : SET ID DOT NEG SEMICOLOMstatement : SET ID DOT T SEMICOLOM\n    \t\t\t | SET ID DOT F SEMICOLOMstatement : ABANICO LPARENT A RPARENT SEMICOLOM\n       \t\t\t| ABANICO LPARENT B RPARENT SEMICOLOMstatement : VERTICAL LPARENT D RPARENT SEMICOLOM\n       \t\t\t| VERTICAL LPARENT I RPARENT SEMICOLOMstatement : PERCUTOR LPARENT A empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT B empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT A B RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT D empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT I empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT D I RPARENT SEMICOLOMstatement : GOLPE LPARENT RPARENT SEMICOLOMstatement : VIBRATO LPARENT NUMBER_I RPARENT SEMICOLOMstatement : METRONOMO LPARENT A COMMA NUMBER_I RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT D COMMA NUMBER_I RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT A COMMA NUMBER_F RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT D COMMA NUMBER_F RPARENT SEMICOLOMstatement : PRINT LPARENT printTextList RPARENT SEMICOLOMprintTextList : printTextprintTextList : printTextList COMMA printTextprintText : printvar\n\t\t\t\t| STRINGprintvar : ID\n\t\t\t| NUMBER_I\n\t\t\t| NUMBER_F\n\t\t\t| TRUE\n\t\t\t| FALSEvarList : var\n\t\t\t\t| emptyvarList : varList COMMA var var : ID\n\t\t\t| NUMBER_I\n\t\t\t| NUMBER_F\n\t\t\t| TRUE\n\t\t\t| FALSEconditionif : expression relation expression\n\t\t\t\t| TRUE\n\t\t\t\t| FALSE\n\t\t\t\t| ID\n\t\t\t\t| ID relation varinCaseLista : inCasea inCaseLista : inCaseLista inCaseainCasea : CUANDO ID relation expression ET LBRACKET statementList RBRACKET\n\t\t\t\t|  CUANDO ID relation TRUE ET LBRACKET statementList RBRACKET\n\t\t\t\t|  CUANDO ID relation FALSE ET LBRACKET statementList RBRACKETinCaseListb : inCaseb inCaseListb : inCaseListb inCasebinCaseb : CUANDO relation expression ET LBRACKET statementList RBRACKET\n\t\t\t\t| CUANDO relation TRUE ET LBRACKET statementList RBRACKET\n\t\t\t\t| CUANDO relation FALSE ET LBRACKET statementList RBRACKETrelation : COMPARErelation : NErelation : LTrelation : GTrelation : LTErelation : GTEexpression : termexpression : addingOperator termexpression : expression addingOperator termaddingOperator : PLUSaddingOperator : MINUSterm : factorterm : term multiplyingOperator factormultiplyingOperator : TIMESmultiplyingOperator : DIVIDEmultiplyingOperator : DIVIDE_Efactor : factorMfactor : factor MODULE factorMfactorM : indexfactorM : factorM EXPONENT indexindex : NUMBER_I empty\n\t\t\t  | NUMBER_F empty\n\t\t\t  | addingOperator NUMBER_I\n\t\t\t  | addingOperator NUMBER_F\n\t\t\t  | addingOperator ID\n\t\t\t  | ID emptyindex : LPARENT expression RPARENTempty : '
    
_lr_action_items = {'DEF':([0,2,3,42,133,],[5,5,5,-4,-5,]),'$end':([0,1,2,3,4,6,7,8,42,133,],[-98,0,-98,-98,-98,-1,-2,-3,-4,-5,]),'PRIN':([5,],[9,]),'ID':([5,12,24,27,28,30,31,32,46,53,55,56,61,66,73,75,77,80,81,82,83,84,85,86,87,88,90,91,92,93,94,99,100,105,157,158,174,],[10,14,14,44,45,51,62,64,78,98,-80,-81,104,111,128,104,14,104,104,-71,-72,-73,-74,-75,-76,14,104,-84,-85,-86,149,104,104,104,104,104,128,]),'LPARENT':([9,10,29,30,33,34,35,36,37,38,39,45,53,55,56,61,75,80,81,82,83,84,85,86,87,90,91,92,93,99,100,105,157,158,],[11,12,46,61,67,68,69,70,71,72,73,77,61,-80,-81,61,61,61,61,-71,-72,-73,-74,-75,-76,61,-84,-85,-86,61,61,61,61,61,]),'RPARENT':([11,12,14,15,16,17,18,19,20,21,41,52,54,57,58,59,60,70,77,78,89,95,96,97,98,101,102,103,104,112,113,114,115,116,117,118,119,121,124,125,126,127,128,129,130,131,132,140,144,146,147,148,149,150,151,152,163,164,165,166,167,168,205,206,207,208,210,],[13,-98,-51,23,-48,-49,-52,-53,-54,-55,-50,-77,-82,-87,-89,-98,-98,120,-98,141,-96,-78,-93,-94,-95,-91,-92,152,-98,159,160,161,162,-98,-98,-98,-98,170,173,-39,-41,-42,-43,-44,-45,-46,-47,181,-79,-83,-93,-94,-95,-88,-90,-97,198,199,200,201,202,203,230,231,232,233,-40,]),'NUMBER_I':([12,24,30,53,55,56,61,71,73,75,77,80,81,82,83,84,85,86,87,88,90,91,92,93,94,99,100,105,157,158,171,172,174,184,],[18,18,59,96,-80,-81,59,121,129,59,18,59,59,-71,-72,-73,-74,-75,-76,18,59,-84,-85,-86,147,59,59,59,59,59,205,207,129,214,]),'NUMBER_F':([12,24,30,53,55,56,61,73,75,77,80,81,82,83,84,85,86,87,88,90,91,92,93,94,99,100,105,157,158,171,172,174,],[19,19,60,97,-80,-81,60,130,60,19,60,60,-71,-72,-73,-74,-75,-76,19,60,-84,-85,-86,148,60,60,60,60,60,206,208,130,]),'TRUE':([12,24,30,73,75,77,82,83,84,85,86,87,88,157,158,174,],[20,20,49,131,134,20,-71,-72,-73,-74,-75,-76,20,189,192,131,]),'FALSE':([12,24,30,73,75,77,82,83,84,85,86,87,88,157,158,174,],[21,21,50,132,135,21,-71,-72,-73,-74,-75,-76,21,190,193,132,]),'COMMA':([12,14,15,16,17,18,19,20,21,41,44,77,122,123,124,125,126,127,128,129,130,131,132,140,210,],[-98,-51,24,-48,-49,-52,-53,-54,-55,-50,75,-98,171,172,174,-39,-41,-42,-43,-44,-45,-46,-47,24,-40,]),'LBRACKET':([13,14,18,19,20,21,23,47,49,50,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,106,143,144,145,146,147,148,149,150,151,152,153,155,185,213,214,215,218,219,220,221,222,223,],[22,-51,-52,-53,-54,-55,40,79,-57,-58,-59,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,154,-56,-79,-60,-83,-93,-94,-95,-88,-90,-97,-98,187,-98,234,235,236,239,240,241,242,243,244,]),'SET':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[27,27,-6,27,-7,27,27,27,27,-32,-8,-9,-10,-19,-20,-21,-12,-98,27,27,-22,-23,-24,-25,-33,-38,-11,-13,27,-26,-28,-27,-29,-31,-30,27,27,27,27,27,27,27,27,27,-34,-36,-35,-37,27,27,27,-17,27,27,27,27,27,27,-14,-15,-16,-18,]),'EXEC':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[28,28,-6,28,-7,28,28,28,28,-32,-8,-9,-10,-19,-20,-21,-12,-98,28,28,-22,-23,-24,-25,-33,-38,-11,-13,28,-26,-28,-27,-29,-31,-30,28,28,28,28,28,28,28,28,28,-34,-36,-35,-37,28,28,28,-17,28,28,28,28,28,28,-14,-15,-16,-18,]),'TYPE':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[29,29,-6,29,-7,29,29,29,29,-32,-8,-9,-10,-19,-20,-21,-12,-98,29,29,-22,-23,-24,-25,-33,-38,-11,-13,29,-26,-28,-27,-29,-31,-30,29,29,29,29,29,29,29,29,29,-34,-36,-35,-37,29,29,29,-17,29,29,29,29,29,29,-14,-15,-16,-18,]),'IF':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[30,30,-6,30,-7,30,30,30,30,-32,-8,-9,-10,-19,-20,-21,-12,-98,30,30,-22,-23,-24,-25,-33,-38,-11,-13,30,-26,-28,-27,-29,-31,-30,30,30,30,30,30,30,30,30,30,-34,-36,-35,-37,30,30,30,-17,30,30,30,30,30,30,-14,-15,-16,-18,]),'FOR':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[31,31,-6,31,-7,31,31,31,31,-32,-8,-9,-10,-19,-20,-21,-12,-98,31,31,-22,-23,-24,-25,-33,-38,-11,-13,31,-26,-28,-27,-29,-31,-30,31,31,31,31,31,31,31,31,31,-34,-36,-35,-37,31,31,31,-17,31,31,31,31,31,31,-14,-15,-16,-18,]),'EC':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[32,32,-6,32,-7,32,32,32,32,-32,-8,-9,-10,-19,-20,-21,-12,-98,32,32,-22,-23,-24,-25,-33,-38,-11,-13,32,-26,-28,-27,-29,-31,-30,32,32,32,32,32,32,32,32,32,-34,-36,-35,-37,32,32,32,-17,32,32,32,32,32,32,-14,-15,-16,-18,]),'ABANICO':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[33,33,-6,33,-7,33,33,33,33,-32,-8,-9,-10,-19,-20,-21,-12,-98,33,33,-22,-23,-24,-25,-33,-38,-11,-13,33,-26,-28,-27,-29,-31,-30,33,33,33,33,33,33,33,33,33,-34,-36,-35,-37,33,33,33,-17,33,33,33,33,33,33,-14,-15,-16,-18,]),'VERTICAL':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[34,34,-6,34,-7,34,34,34,34,-32,-8,-9,-10,-19,-20,-21,-12,-98,34,34,-22,-23,-24,-25,-33,-38,-11,-13,34,-26,-28,-27,-29,-31,-30,34,34,34,34,34,34,34,34,34,-34,-36,-35,-37,34,34,34,-17,34,34,34,34,34,34,-14,-15,-16,-18,]),'PERCUTOR':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[35,35,-6,35,-7,35,35,35,35,-32,-8,-9,-10,-19,-20,-21,-12,-98,35,35,-22,-23,-24,-25,-33,-38,-11,-13,35,-26,-28,-27,-29,-31,-30,35,35,35,35,35,35,35,35,35,-34,-36,-35,-37,35,35,35,-17,35,35,35,35,35,35,-14,-15,-16,-18,]),'GOLPE':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[36,36,-6,36,-7,36,36,36,36,-32,-8,-9,-10,-19,-20,-21,-12,-98,36,36,-22,-23,-24,-25,-33,-38,-11,-13,36,-26,-28,-27,-29,-31,-30,36,36,36,36,36,36,36,36,36,-34,-36,-35,-37,36,36,36,-17,36,36,36,36,36,36,-14,-15,-16,-18,]),'VIBRATO':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[37,37,-6,37,-7,37,37,37,37,-32,-8,-9,-10,-19,-20,-21,-12,-98,37,37,-22,-23,-24,-25,-33,-38,-11,-13,37,-26,-28,-27,-29,-31,-30,37,37,37,37,37,37,37,37,37,-34,-36,-35,-37,37,37,37,-17,37,37,37,37,37,37,-14,-15,-16,-18,]),'METRONOMO':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[38,38,-6,38,-7,38,38,38,38,-32,-8,-9,-10,-19,-20,-21,-12,-98,38,38,-22,-23,-24,-25,-33,-38,-11,-13,38,-26,-28,-27,-29,-31,-30,38,38,38,38,38,38,38,38,38,-34,-36,-35,-37,38,38,38,-17,38,38,38,38,38,38,-14,-15,-16,-18,]),'PRINT':([22,25,26,40,43,74,79,142,154,169,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[39,39,-6,39,-7,39,39,39,39,-32,-8,-9,-10,-19,-20,-21,-12,-98,39,39,-22,-23,-24,-25,-33,-38,-11,-13,39,-26,-28,-27,-29,-31,-30,39,39,39,39,39,39,39,39,39,-34,-36,-35,-37,39,39,39,-17,39,39,39,39,39,39,-14,-15,-16,-18,]),'RBRACKET':([25,26,43,74,142,169,175,176,177,178,179,180,182,183,186,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[42,-6,-7,133,183,-32,-8,-9,-10,-19,-20,-21,-12,-98,216,-22,-23,-24,-25,-33,-38,-11,-13,238,-26,-28,-27,-29,-31,-30,-34,-36,-35,-37,260,261,262,-17,264,265,266,267,268,269,-14,-15,-16,-18,]),'PLUS':([30,48,51,52,53,54,55,56,57,58,59,60,61,75,80,81,82,83,84,85,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,136,143,144,146,147,148,149,150,151,152,153,157,158,188,191,],[55,55,-98,-77,55,-82,-80,-81,-87,-89,-98,-98,55,55,55,55,-71,-72,-73,-74,-75,-76,-96,55,-84,-85,-86,-78,-93,-94,-95,55,55,-91,-92,55,-98,55,55,55,-79,-83,-93,-94,-95,-88,-90,-97,55,55,55,55,55,]),'MINUS':([30,48,51,52,53,54,55,56,57,58,59,60,61,75,80,81,82,83,84,85,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,136,143,144,146,147,148,149,150,151,152,153,157,158,188,191,],[56,56,-98,-77,56,-82,-80,-81,-87,-89,-98,-98,56,56,56,56,-71,-72,-73,-74,-75,-76,-96,56,-84,-85,-86,-78,-93,-94,-95,56,56,-91,-92,56,-98,56,56,56,-79,-83,-93,-94,-95,-88,-90,-97,56,56,56,56,56,]),'CUANDO':([32,63,64,65,107,108,109,156,264,265,266,267,268,269,],[66,66,110,-61,-62,110,-66,-67,-68,-69,-70,-63,-64,-65,]),'DOT':([44,],[76,]),'COMPARE':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[82,82,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,82,82,-79,-83,-93,-94,-95,-88,-90,-97,]),'NE':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[83,83,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,83,83,-79,-83,-93,-94,-95,-88,-90,-97,]),'LT':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[84,84,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,84,84,-79,-83,-93,-94,-95,-88,-90,-97,]),'GT':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[85,85,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,85,85,-79,-83,-93,-94,-95,-88,-90,-97,]),'LTE':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[86,86,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,86,86,-79,-83,-93,-94,-95,-88,-90,-97,]),'GTE':([48,51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,110,111,144,146,147,148,149,150,151,152,],[87,87,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,87,87,-79,-83,-93,-94,-95,-88,-90,-97,]),'EXPONENT':([51,57,58,59,60,89,96,97,98,101,102,104,147,148,149,150,151,152,],[-98,100,-89,-98,-98,-96,-93,-94,-95,-91,-92,-98,-93,-94,-95,100,-90,-97,]),'MODULE':([51,54,57,58,59,60,89,96,97,98,101,102,104,146,147,148,149,150,151,152,],[-98,99,-87,-89,-98,-98,-96,-93,-94,-95,-91,-92,-98,99,-93,-94,-95,-88,-90,-97,]),'TIMES':([51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,144,146,147,148,149,150,151,152,],[-98,91,-82,-87,-89,-98,-98,-96,91,-93,-94,-95,-91,-92,-98,91,-83,-93,-94,-95,-88,-90,-97,]),'DIVIDE':([51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,144,146,147,148,149,150,151,152,],[-98,92,-82,-87,-89,-98,-98,-96,92,-93,-94,-95,-91,-92,-98,92,-83,-93,-94,-95,-88,-90,-97,]),'DIVIDE_E':([51,52,54,57,58,59,60,89,95,96,97,98,101,102,104,144,146,147,148,149,150,151,152,],[-98,93,-82,-87,-89,-98,-98,-96,93,-93,-94,-95,-91,-92,-98,93,-83,-93,-94,-95,-88,-90,-97,]),'SEMICOLOM':([52,54,57,58,59,60,89,95,96,97,98,101,102,104,120,134,135,136,137,138,139,141,144,146,147,148,149,150,151,152,159,160,161,162,170,173,181,198,199,200,201,202,203,230,231,232,233,237,253,],[-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,169,175,176,177,178,179,180,182,-79,-83,-93,-94,-95,-88,-90,-97,194,195,196,197,204,209,211,224,225,226,227,228,229,245,246,247,248,252,263,]),'STEP':([52,54,57,58,59,60,89,95,96,97,98,101,102,104,144,146,147,148,149,150,151,152,153,],[-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,-79,-83,-93,-94,-95,-88,-90,-97,184,]),'ET':([52,54,57,58,59,60,89,95,96,97,98,101,102,104,144,146,147,148,149,150,151,152,188,189,190,191,192,193,],[-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,-79,-83,-93,-94,-95,-88,-90,-97,218,219,220,221,222,223,]),'TO':([62,],[105,]),'SN':([63,65,107,108,109,156,264,265,266,267,268,269,],[106,-61,-62,155,-66,-67,-68,-69,-70,-63,-64,-65,]),'A':([67,69,72,],[112,116,122,]),'B':([67,69,116,],[113,117,164,]),'D':([68,69,72,],[114,118,123,]),'I':([68,69,118,],[115,119,167,]),'STRING':([73,174,],[127,127,]),'NEG':([76,],[137,]),'T':([76,],[138,]),'F':([76,],[139,]),'ELSE':([183,],[213,]),'FEC':([216,238,],[237,253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,6,7,]),'prinDecl':([0,2,3,],[2,2,2,]),'functionDecl':([0,2,3,],[3,3,3,]),'empty':([0,2,3,4,12,51,59,60,77,96,97,98,104,116,117,118,119,153,183,185,],[4,4,4,8,17,89,101,102,17,101,102,89,89,163,165,166,168,185,212,215,]),'varList':([12,77,],[15,140,]),'var':([12,24,77,88,],[16,41,16,145,]),'statementList':([22,40,79,154,187,234,235,236,239,240,241,242,243,244,],[25,74,142,186,217,249,250,251,254,255,256,257,258,259,]),'statement':([22,25,40,74,79,142,154,186,187,217,234,235,236,239,240,241,242,243,244,249,250,251,254,255,256,257,258,259,],[26,43,26,43,26,43,26,43,26,43,26,26,26,26,26,26,26,26,26,43,43,43,43,43,43,43,43,43,]),'conditionif':([30,],[47,]),'expression':([30,61,75,80,105,157,158,],[48,103,136,143,153,188,191,]),'term':([30,53,61,75,80,81,105,157,158,],[52,95,52,52,52,144,52,52,52,]),'addingOperator':([30,48,53,61,75,80,81,90,99,100,103,105,136,143,153,157,158,188,191,],[53,81,94,53,53,53,94,94,94,94,81,53,81,81,81,53,53,81,81,]),'factor':([30,53,61,75,80,81,90,105,157,158,],[54,54,54,54,54,54,146,54,54,54,]),'factorM':([30,53,61,75,80,81,90,99,105,157,158,],[57,57,57,57,57,57,57,150,57,57,57,]),'index':([30,53,61,75,80,81,90,99,100,105,157,158,],[58,58,58,58,58,58,58,58,151,58,58,58,]),'inCaseLista':([32,],[63,]),'inCasea':([32,63,],[65,107,]),'relation':([48,51,110,111,],[80,88,157,158,]),'multiplyingOperator':([52,95,144,],[90,90,90,]),'inCaseListb':([64,],[108,]),'inCaseb':([64,108,],[109,156,]),'printTextList':([73,],[124,]),'printText':([73,174,],[125,210,]),'printvar':([73,174,],[126,126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> prinDecl program','program',2,'p_program','Parser.py',30),
  ('program -> functionDecl program','program',2,'p_program','Parser.py',31),
  ('program -> empty empty','program',2,'p_program','Parser.py',32),
  ('prinDecl -> DEF PRIN LPARENT RPARENT LBRACKET statementList RBRACKET','prinDecl',7,'p_prinDecl','Parser.py',44),
  ('functionDecl -> DEF ID LPARENT varList RPARENT LBRACKET statementList RBRACKET','functionDecl',8,'p_functionDecl','Parser.py',48),
  ('statementList -> statement','statementList',1,'p_statementList1','Parser.py',55),
  ('statementList -> statementList statement','statementList',2,'p_statementList2','Parser.py',61),
  ('statement -> SET ID COMMA TRUE SEMICOLOM','statement',5,'p_statement1','Parser.py',69),
  ('statement -> SET ID COMMA FALSE SEMICOLOM','statement',5,'p_statement1','Parser.py',70),
  ('statement -> SET ID COMMA expression SEMICOLOM','statement',5,'p_statement1','Parser.py',71),
  ('statement -> EXEC ID LPARENT varList RPARENT SEMICOLOM','statement',6,'p_statement2','Parser.py',78),
  ('statement -> TYPE LPARENT ID RPARENT SEMICOLOM','statement',5,'p_statement3','Parser.py',85),
  ('statement -> IF conditionif LBRACKET statementList RBRACKET empty','statement',6,'p_statement4','Parser.py',92),
  ('statement -> IF conditionif LBRACKET statementList RBRACKET ELSE LBRACKET statementList RBRACKET','statement',9,'p_statement4','Parser.py',93),
  ('statement -> FOR ID TO expression STEP NUMBER_I LBRACKET statementList RBRACKET','statement',9,'p_statement5','Parser.py',103),
  ('statement -> FOR ID TO expression empty empty LBRACKET statementList RBRACKET','statement',9,'p_statement5','Parser.py',104),
  ('statement -> EC inCaseLista SN LBRACKET statementList RBRACKET FEC SEMICOLOM','statement',8,'p_statement6','Parser.py',112),
  ('statement -> EC ID inCaseListb SN LBRACKET statementList RBRACKET FEC SEMICOLOM','statement',9,'p_statement6','Parser.py',113),
  ('statement -> SET ID DOT NEG SEMICOLOM','statement',5,'p_statement7','Parser.py',123),
  ('statement -> SET ID DOT T SEMICOLOM','statement',5,'p_statement8','Parser.py',130),
  ('statement -> SET ID DOT F SEMICOLOM','statement',5,'p_statement8','Parser.py',131),
  ('statement -> ABANICO LPARENT A RPARENT SEMICOLOM','statement',5,'p_statement9','Parser.py',138),
  ('statement -> ABANICO LPARENT B RPARENT SEMICOLOM','statement',5,'p_statement9','Parser.py',139),
  ('statement -> VERTICAL LPARENT D RPARENT SEMICOLOM','statement',5,'p_statement10','Parser.py',146),
  ('statement -> VERTICAL LPARENT I RPARENT SEMICOLOM','statement',5,'p_statement10','Parser.py',147),
  ('statement -> PERCUTOR LPARENT A empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',155),
  ('statement -> PERCUTOR LPARENT B empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',156),
  ('statement -> PERCUTOR LPARENT A B RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',157),
  ('statement -> PERCUTOR LPARENT D empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',158),
  ('statement -> PERCUTOR LPARENT I empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',159),
  ('statement -> PERCUTOR LPARENT D I RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',160),
  ('statement -> GOLPE LPARENT RPARENT SEMICOLOM','statement',4,'p_statement12','Parser.py',168),
  ('statement -> VIBRATO LPARENT NUMBER_I RPARENT SEMICOLOM','statement',5,'p_statement13','Parser.py',175),
  ('statement -> METRONOMO LPARENT A COMMA NUMBER_I RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',183),
  ('statement -> METRONOMO LPARENT D COMMA NUMBER_I RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',184),
  ('statement -> METRONOMO LPARENT A COMMA NUMBER_F RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',185),
  ('statement -> METRONOMO LPARENT D COMMA NUMBER_F RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',186),
  ('statement -> PRINT LPARENT printTextList RPARENT SEMICOLOM','statement',5,'p_statement15','Parser.py',193),
  ('printTextList -> printText','printTextList',1,'p_printTextList1','Parser.py',202),
  ('printTextList -> printTextList COMMA printText','printTextList',3,'p_printTextList2','Parser.py',207),
  ('printText -> printvar','printText',1,'p_printText','Parser.py',213),
  ('printText -> STRING','printText',1,'p_printText','Parser.py',214),
  ('printvar -> ID','printvar',1,'p_printvar','Parser.py',217),
  ('printvar -> NUMBER_I','printvar',1,'p_printvar','Parser.py',218),
  ('printvar -> NUMBER_F','printvar',1,'p_printvar','Parser.py',219),
  ('printvar -> TRUE','printvar',1,'p_printvar','Parser.py',220),
  ('printvar -> FALSE','printvar',1,'p_printvar','Parser.py',221),
  ('varList -> var','varList',1,'p_varList1','Parser.py',225),
  ('varList -> empty','varList',1,'p_varList1','Parser.py',226),
  ('varList -> varList COMMA var','varList',3,'p_varList2','Parser.py',231),
  ('var -> ID','var',1,'p_var','Parser.py',236),
  ('var -> NUMBER_I','var',1,'p_var','Parser.py',237),
  ('var -> NUMBER_F','var',1,'p_var','Parser.py',238),
  ('var -> TRUE','var',1,'p_var','Parser.py',239),
  ('var -> FALSE','var',1,'p_var','Parser.py',240),
  ('conditionif -> expression relation expression','conditionif',3,'p_conditionif','Parser.py',245),
  ('conditionif -> TRUE','conditionif',1,'p_conditionif','Parser.py',246),
  ('conditionif -> FALSE','conditionif',1,'p_conditionif','Parser.py',247),
  ('conditionif -> ID','conditionif',1,'p_conditionif','Parser.py',248),
  ('conditionif -> ID relation var','conditionif',3,'p_conditionif','Parser.py',249),
  ('inCaseLista -> inCasea','inCaseLista',1,'p_inCaseLista1','Parser.py',257),
  ('inCaseLista -> inCaseLista inCasea','inCaseLista',2,'p_inCaseLista2','Parser.py',262),
  ('inCasea -> CUANDO ID relation expression ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',267),
  ('inCasea -> CUANDO ID relation TRUE ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',268),
  ('inCasea -> CUANDO ID relation FALSE ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',269),
  ('inCaseListb -> inCaseb','inCaseListb',1,'p_inCaseListb1','Parser.py',275),
  ('inCaseListb -> inCaseListb inCaseb','inCaseListb',2,'p_inCaseListb2','Parser.py',280),
  ('inCaseb -> CUANDO relation expression ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',285),
  ('inCaseb -> CUANDO relation TRUE ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',286),
  ('inCaseb -> CUANDO relation FALSE ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',287),
  ('relation -> COMPARE','relation',1,'p_relation1','Parser.py',293),
  ('relation -> NE','relation',1,'p_relation2','Parser.py',298),
  ('relation -> LT','relation',1,'p_relation3','Parser.py',303),
  ('relation -> GT','relation',1,'p_relation4','Parser.py',308),
  ('relation -> LTE','relation',1,'p_relation5','Parser.py',313),
  ('relation -> GTE','relation',1,'p_relation6','Parser.py',318),
  ('expression -> term','expression',1,'p_expression1','Parser.py',323),
  ('expression -> addingOperator term','expression',2,'p_expression2','Parser.py',328),
  ('expression -> expression addingOperator term','expression',3,'p_expression3','Parser.py',333),
  ('addingOperator -> PLUS','addingOperator',1,'p_addingOperator1','Parser.py',338),
  ('addingOperator -> MINUS','addingOperator',1,'p_addingOperator2','Parser.py',343),
  ('term -> factor','term',1,'p_term1','Parser.py',348),
  ('term -> term multiplyingOperator factor','term',3,'p_term2','Parser.py',352),
  ('multiplyingOperator -> TIMES','multiplyingOperator',1,'p_multiplyingOperator1','Parser.py',357),
  ('multiplyingOperator -> DIVIDE','multiplyingOperator',1,'p_multiplyingOperator2','Parser.py',362),
  ('multiplyingOperator -> DIVIDE_E','multiplyingOperator',1,'p_multiplyingOperator3','Parser.py',367),
  ('factor -> factorM','factor',1,'p_factor1','Parser.py',372),
  ('factor -> factor MODULE factorM','factor',3,'p_factor2','Parser.py',377),
  ('factorM -> index','factorM',1,'p_factorM1','Parser.py',382),
  ('factorM -> factorM EXPONENT index','factorM',3,'p_factorM2','Parser.py',387),
  ('index -> NUMBER_I empty','index',2,'p_index1','Parser.py',392),
  ('index -> NUMBER_F empty','index',2,'p_index1','Parser.py',393),
  ('index -> addingOperator NUMBER_I','index',2,'p_index1','Parser.py',394),
  ('index -> addingOperator NUMBER_F','index',2,'p_index1','Parser.py',395),
  ('index -> addingOperator ID','index',2,'p_index1','Parser.py',396),
  ('index -> ID empty','index',2,'p_index1','Parser.py',397),
  ('index -> LPARENT expression RPARENT','index',3,'p_index2','Parser.py',405),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',410),
]

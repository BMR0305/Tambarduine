
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNCOMPAREleftNEleftLTLTEGTGTEleftPLUSMINUSleftTIMESDIVIDEDIVIDE_EleftMODULEleftEXPONENTleftLPARENTRPARENTA ABANICO ASSIGN B COMMA COMPARE CUANDO D DEF DIVIDE DIVIDE_E DOT EC ELSE ET EXEC EXPONENT F FALSE FEC FOR GOLPE GT GTE I ID IF LBRACKET LPARENT LT LTE METRONOMO MINUS MODULE NE NEG NUMBER_F NUMBER_I PERCUTOR PLUS PRIN PRINT RBRACKET RPARENT SEMICOLOM SET SN SPACE STEP STRING T TIMES TO TRUE TYPE VERTICAL VIBRATOprogram : program prinDecl\n\t\t\t | program functionDecl\n\t\t\t | empty emptyprinDecl : DEF PRIN LPARENT RPARENT LBRACKET statementList RBRACKET SEMICOLOMfunctionDecl : DEF ID LPARENT varList RPARENT LBRACKET statementList RBRACKET SEMICOLOMstatementList : statement statementList : statementList statement statement : SET ID COMMA TRUE SEMICOLOM\n    \t\t\t| SET ID COMMA FALSE SEMICOLOM\n    \t\t\t| SET ID COMMA expression SEMICOLOMstatement : EXEC ID LPARENT varList RPARENT SEMICOLOMstatement : TYPE LPARENT ID RPARENT SEMICOLOMstatement : IF conditionif LBRACKET statementList RBRACKET empty\n                 | IF conditionif LBRACKET statementList RBRACKET ELSE LBRACKET statementList RBRACKET statement : FOR ID TO expression STEP NUMBER_I LBRACKET statementList RBRACKET\n    \t\t\t| FOR ID TO expression empty empty LBRACKET statementList RBRACKETstatement : EC inCaseLista SN LBRACKET statementList RBRACKET FEC SEMICOLOM\n\t                 | EC ID inCaseListb SN LBRACKET statementList RBRACKET FEC SEMICOLOMstatement : SET ID DOT NEG SEMICOLOMstatement : SET ID DOT T SEMICOLOM\n    \t\t\t | SET ID DOT F SEMICOLOMstatement : ABANICO LPARENT A RPARENT SEMICOLOM\n       \t\t\t| ABANICO LPARENT B RPARENT SEMICOLOMstatement : VERTICAL LPARENT D RPARENT SEMICOLOM\n       \t\t\t| VERTICAL LPARENT I RPARENT SEMICOLOMstatement : PERCUTOR LPARENT A empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT B empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT A B RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT D empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT I empty RPARENT SEMICOLOM\n       \t\t\t| PERCUTOR LPARENT D I RPARENT SEMICOLOMstatement : GOLPE LPARENT RPARENT SEMICOLOMstatement : VIBRATO LPARENT NUMBER_I RPARENT SEMICOLOMstatement : METRONOMO LPARENT A COMMA NUMBER_I RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT D COMMA NUMBER_I RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT A COMMA NUMBER_F RPARENT SEMICOLOM\n    \t\t      | METRONOMO LPARENT D COMMA NUMBER_F RPARENT SEMICOLOMstatement : PRINT LPARENT printTextList RPARENT SEMICOLOMprintTextList : printTextprintTextList : printTextList COMMA printTextprintText : printvar\n\t\t\t\t| STRINGprintvar : ID\n\t\t\t| NUMBER_I\n\t\t\t| NUMBER_F\n\t\t\t| TRUE\n\t\t\t| FALSEvarList : var\n\t\t\t\t| emptyvarList : varList COMMA var var : ID\n\t\t\t| NUMBER_I\n\t\t\t| NUMBER_F\n\t\t\t| TRUE\n\t\t\t| FALSEconditionif : expression relation expression\n\t\t\t\t| TRUE\n\t\t\t\t| FALSE\n\t\t\t\t| ID\n\t\t\t\t| ID relation varinCaseLista : inCasea inCaseLista : inCaseLista inCaseainCasea : CUANDO ID relation expression ET LBRACKET statementList RBRACKET\n\t\t\t\t|  CUANDO ID relation TRUE ET LBRACKET statementList RBRACKET\n\t\t\t\t|  CUANDO ID relation FALSE ET LBRACKET statementList RBRACKETinCaseListb : inCaseb inCaseListb : inCaseListb inCasebinCaseb : CUANDO relation expression ET LBRACKET statementList RBRACKET\n\t\t\t\t| CUANDO relation TRUE ET LBRACKET statementList RBRACKET\n\t\t\t\t| CUANDO relation FALSE ET LBRACKET statementList RBRACKETrelation : COMPARErelation : NErelation : LTrelation : GTrelation : LTErelation : GTEexpression : termexpression : addingOperator termexpression : expression addingOperator termaddingOperator : PLUSaddingOperator : MINUSterm : factorterm : term multiplyingOperator factormultiplyingOperator : TIMESmultiplyingOperator : DIVIDEmultiplyingOperator : DIVIDE_Efactor : factorMfactor : factor MODULE factorMfactorM : indexfactorM : factorM EXPONENT indexindex : NUMBER_I empty\n\t\t\t  | NUMBER_F empty\n\t\t\t  | addingOperator NUMBER_I\n\t\t\t  | addingOperator NUMBER_F\n\t\t\t  | addingOperator ID\n\t\t\t  | ID emptyindex : LPARENT expression RPARENTempty : '
    
_lr_action_items = {'DEF':([0,1,2,3,4,6,73,174,],[-98,5,-98,-1,-2,-3,-4,-5,]),'$end':([0,1,2,3,4,6,73,174,],[-98,0,-98,-1,-2,-3,-4,-5,]),'PRIN':([5,],[7,]),'ID':([5,10,22,25,26,28,29,30,44,51,53,54,59,64,71,74,76,79,80,81,82,83,84,85,86,87,89,90,91,92,93,98,99,104,156,157,173,],[8,12,12,42,43,49,60,62,77,97,-80,-81,103,110,127,103,12,103,103,-71,-72,-73,-74,-75,-76,12,103,-84,-85,-86,148,103,103,103,103,103,127,]),'LPARENT':([7,8,27,28,31,32,33,34,35,36,37,43,51,53,54,59,74,79,80,81,82,83,84,85,86,89,90,91,92,98,99,104,156,157,],[9,10,44,59,65,66,67,68,69,70,71,76,59,-80,-81,59,59,59,59,-71,-72,-73,-74,-75,-76,59,-84,-85,-86,59,59,59,59,59,]),'RPARENT':([9,10,12,13,14,15,16,17,18,19,39,50,52,55,56,57,58,68,76,77,88,94,95,96,97,100,101,102,103,111,112,113,114,115,116,117,118,120,123,124,125,126,127,128,129,130,131,139,143,145,146,147,148,149,150,151,162,163,164,165,166,167,205,206,207,208,210,],[11,-98,-51,21,-48,-49,-52,-53,-54,-55,-50,-77,-82,-87,-89,-98,-98,119,-98,140,-96,-78,-93,-94,-95,-91,-92,151,-98,158,159,160,161,-98,-98,-98,-98,169,172,-39,-41,-42,-43,-44,-45,-46,-47,181,-79,-83,-93,-94,-95,-88,-90,-97,198,199,200,201,202,203,230,231,232,233,-40,]),'NUMBER_I':([10,22,28,51,53,54,59,69,71,74,76,79,80,81,82,83,84,85,86,87,89,90,91,92,93,98,99,104,156,157,170,171,173,184,],[16,16,57,95,-80,-81,57,120,128,57,16,57,57,-71,-72,-73,-74,-75,-76,16,57,-84,-85,-86,146,57,57,57,57,57,205,207,128,214,]),'NUMBER_F':([10,22,28,51,53,54,59,71,74,76,79,80,81,82,83,84,85,86,87,89,90,91,92,93,98,99,104,156,157,170,171,173,],[17,17,58,96,-80,-81,58,129,58,17,58,58,-71,-72,-73,-74,-75,-76,17,58,-84,-85,-86,147,58,58,58,58,58,206,208,129,]),'TRUE':([10,22,28,71,74,76,81,82,83,84,85,86,87,156,157,173,],[18,18,47,130,133,18,-71,-72,-73,-74,-75,-76,18,189,192,130,]),'FALSE':([10,22,28,71,74,76,81,82,83,84,85,86,87,156,157,173,],[19,19,48,131,134,19,-71,-72,-73,-74,-75,-76,19,190,193,131,]),'COMMA':([10,12,13,14,15,16,17,18,19,39,42,76,121,122,123,124,125,126,127,128,129,130,131,139,210,],[-98,-51,22,-48,-49,-52,-53,-54,-55,-50,74,-98,170,171,173,-39,-41,-42,-43,-44,-45,-46,-47,22,-40,]),'LBRACKET':([11,12,16,17,18,19,21,45,47,48,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,105,142,143,144,145,146,147,148,149,150,151,152,154,185,213,214,215,218,219,220,221,222,223,],[20,-51,-52,-53,-54,-55,38,78,-57,-58,-59,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,153,-56,-79,-60,-83,-93,-94,-95,-88,-90,-97,-98,187,-98,234,235,236,239,240,241,242,243,244,]),'SET':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[25,25,-6,25,-7,25,25,25,25,-32,-8,-9,-10,-19,-20,-21,-12,-98,25,25,-22,-23,-24,-25,-33,-38,-11,-13,25,-26,-28,-27,-29,-31,-30,25,25,25,25,25,25,25,25,25,-34,-36,-35,-37,25,25,25,-17,25,25,25,25,25,25,-14,-15,-16,-18,]),'EXEC':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[26,26,-6,26,-7,26,26,26,26,-32,-8,-9,-10,-19,-20,-21,-12,-98,26,26,-22,-23,-24,-25,-33,-38,-11,-13,26,-26,-28,-27,-29,-31,-30,26,26,26,26,26,26,26,26,26,-34,-36,-35,-37,26,26,26,-17,26,26,26,26,26,26,-14,-15,-16,-18,]),'TYPE':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[27,27,-6,27,-7,27,27,27,27,-32,-8,-9,-10,-19,-20,-21,-12,-98,27,27,-22,-23,-24,-25,-33,-38,-11,-13,27,-26,-28,-27,-29,-31,-30,27,27,27,27,27,27,27,27,27,-34,-36,-35,-37,27,27,27,-17,27,27,27,27,27,27,-14,-15,-16,-18,]),'IF':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[28,28,-6,28,-7,28,28,28,28,-32,-8,-9,-10,-19,-20,-21,-12,-98,28,28,-22,-23,-24,-25,-33,-38,-11,-13,28,-26,-28,-27,-29,-31,-30,28,28,28,28,28,28,28,28,28,-34,-36,-35,-37,28,28,28,-17,28,28,28,28,28,28,-14,-15,-16,-18,]),'FOR':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[29,29,-6,29,-7,29,29,29,29,-32,-8,-9,-10,-19,-20,-21,-12,-98,29,29,-22,-23,-24,-25,-33,-38,-11,-13,29,-26,-28,-27,-29,-31,-30,29,29,29,29,29,29,29,29,29,-34,-36,-35,-37,29,29,29,-17,29,29,29,29,29,29,-14,-15,-16,-18,]),'EC':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[30,30,-6,30,-7,30,30,30,30,-32,-8,-9,-10,-19,-20,-21,-12,-98,30,30,-22,-23,-24,-25,-33,-38,-11,-13,30,-26,-28,-27,-29,-31,-30,30,30,30,30,30,30,30,30,30,-34,-36,-35,-37,30,30,30,-17,30,30,30,30,30,30,-14,-15,-16,-18,]),'ABANICO':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[31,31,-6,31,-7,31,31,31,31,-32,-8,-9,-10,-19,-20,-21,-12,-98,31,31,-22,-23,-24,-25,-33,-38,-11,-13,31,-26,-28,-27,-29,-31,-30,31,31,31,31,31,31,31,31,31,-34,-36,-35,-37,31,31,31,-17,31,31,31,31,31,31,-14,-15,-16,-18,]),'VERTICAL':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[32,32,-6,32,-7,32,32,32,32,-32,-8,-9,-10,-19,-20,-21,-12,-98,32,32,-22,-23,-24,-25,-33,-38,-11,-13,32,-26,-28,-27,-29,-31,-30,32,32,32,32,32,32,32,32,32,-34,-36,-35,-37,32,32,32,-17,32,32,32,32,32,32,-14,-15,-16,-18,]),'PERCUTOR':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[33,33,-6,33,-7,33,33,33,33,-32,-8,-9,-10,-19,-20,-21,-12,-98,33,33,-22,-23,-24,-25,-33,-38,-11,-13,33,-26,-28,-27,-29,-31,-30,33,33,33,33,33,33,33,33,33,-34,-36,-35,-37,33,33,33,-17,33,33,33,33,33,33,-14,-15,-16,-18,]),'GOLPE':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[34,34,-6,34,-7,34,34,34,34,-32,-8,-9,-10,-19,-20,-21,-12,-98,34,34,-22,-23,-24,-25,-33,-38,-11,-13,34,-26,-28,-27,-29,-31,-30,34,34,34,34,34,34,34,34,34,-34,-36,-35,-37,34,34,34,-17,34,34,34,34,34,34,-14,-15,-16,-18,]),'VIBRATO':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[35,35,-6,35,-7,35,35,35,35,-32,-8,-9,-10,-19,-20,-21,-12,-98,35,35,-22,-23,-24,-25,-33,-38,-11,-13,35,-26,-28,-27,-29,-31,-30,35,35,35,35,35,35,35,35,35,-34,-36,-35,-37,35,35,35,-17,35,35,35,35,35,35,-14,-15,-16,-18,]),'METRONOMO':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[36,36,-6,36,-7,36,36,36,36,-32,-8,-9,-10,-19,-20,-21,-12,-98,36,36,-22,-23,-24,-25,-33,-38,-11,-13,36,-26,-28,-27,-29,-31,-30,36,36,36,36,36,36,36,36,36,-34,-36,-35,-37,36,36,36,-17,36,36,36,36,36,36,-14,-15,-16,-18,]),'PRINT':([20,23,24,38,41,72,78,141,153,168,175,176,177,178,179,180,182,183,186,187,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[37,37,-6,37,-7,37,37,37,37,-32,-8,-9,-10,-19,-20,-21,-12,-98,37,37,-22,-23,-24,-25,-33,-38,-11,-13,37,-26,-28,-27,-29,-31,-30,37,37,37,37,37,37,37,37,37,-34,-36,-35,-37,37,37,37,-17,37,37,37,37,37,37,-14,-15,-16,-18,]),'RBRACKET':([23,24,41,72,141,168,175,176,177,178,179,180,182,183,186,194,195,196,197,204,209,211,212,217,224,225,226,227,228,229,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,],[40,-6,-7,132,183,-32,-8,-9,-10,-19,-20,-21,-12,-98,216,-22,-23,-24,-25,-33,-38,-11,-13,238,-26,-28,-27,-29,-31,-30,-34,-36,-35,-37,260,261,262,-17,264,265,266,267,268,269,-14,-15,-16,-18,]),'PLUS':([28,46,49,50,51,52,53,54,55,56,57,58,59,74,79,80,81,82,83,84,85,86,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,135,142,143,145,146,147,148,149,150,151,152,156,157,188,191,],[53,53,-98,-77,53,-82,-80,-81,-87,-89,-98,-98,53,53,53,53,-71,-72,-73,-74,-75,-76,-96,53,-84,-85,-86,-78,-93,-94,-95,53,53,-91,-92,53,-98,53,53,53,-79,-83,-93,-94,-95,-88,-90,-97,53,53,53,53,53,]),'MINUS':([28,46,49,50,51,52,53,54,55,56,57,58,59,74,79,80,81,82,83,84,85,86,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,135,142,143,145,146,147,148,149,150,151,152,156,157,188,191,],[54,54,-98,-77,54,-82,-80,-81,-87,-89,-98,-98,54,54,54,54,-71,-72,-73,-74,-75,-76,-96,54,-84,-85,-86,-78,-93,-94,-95,54,54,-91,-92,54,-98,54,54,54,-79,-83,-93,-94,-95,-88,-90,-97,54,54,54,54,54,]),'CUANDO':([30,61,62,63,106,107,108,155,264,265,266,267,268,269,],[64,64,109,-61,-62,109,-66,-67,-68,-69,-70,-63,-64,-65,]),'SEMICOLOM':([40,50,52,55,56,57,58,88,94,95,96,97,100,101,103,119,132,133,134,135,136,137,138,140,143,145,146,147,148,149,150,151,158,159,160,161,169,172,181,198,199,200,201,202,203,230,231,232,233,237,253,],[73,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,168,174,175,176,177,178,179,180,182,-79,-83,-93,-94,-95,-88,-90,-97,194,195,196,197,204,209,211,224,225,226,227,228,229,245,246,247,248,252,263,]),'DOT':([42,],[75,]),'COMPARE':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[81,81,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,81,81,-79,-83,-93,-94,-95,-88,-90,-97,]),'NE':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[82,82,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,82,82,-79,-83,-93,-94,-95,-88,-90,-97,]),'LT':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[83,83,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,83,83,-79,-83,-93,-94,-95,-88,-90,-97,]),'GT':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[84,84,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,84,84,-79,-83,-93,-94,-95,-88,-90,-97,]),'LTE':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[85,85,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,85,85,-79,-83,-93,-94,-95,-88,-90,-97,]),'GTE':([46,49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,109,110,143,145,146,147,148,149,150,151,],[86,86,-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,86,86,-79,-83,-93,-94,-95,-88,-90,-97,]),'EXPONENT':([49,55,56,57,58,88,95,96,97,100,101,103,146,147,148,149,150,151,],[-98,99,-89,-98,-98,-96,-93,-94,-95,-91,-92,-98,-93,-94,-95,99,-90,-97,]),'MODULE':([49,52,55,56,57,58,88,95,96,97,100,101,103,145,146,147,148,149,150,151,],[-98,98,-87,-89,-98,-98,-96,-93,-94,-95,-91,-92,-98,98,-93,-94,-95,-88,-90,-97,]),'TIMES':([49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,143,145,146,147,148,149,150,151,],[-98,90,-82,-87,-89,-98,-98,-96,90,-93,-94,-95,-91,-92,-98,90,-83,-93,-94,-95,-88,-90,-97,]),'DIVIDE':([49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,143,145,146,147,148,149,150,151,],[-98,91,-82,-87,-89,-98,-98,-96,91,-93,-94,-95,-91,-92,-98,91,-83,-93,-94,-95,-88,-90,-97,]),'DIVIDE_E':([49,50,52,55,56,57,58,88,94,95,96,97,100,101,103,143,145,146,147,148,149,150,151,],[-98,92,-82,-87,-89,-98,-98,-96,92,-93,-94,-95,-91,-92,-98,92,-83,-93,-94,-95,-88,-90,-97,]),'STEP':([50,52,55,56,57,58,88,94,95,96,97,100,101,103,143,145,146,147,148,149,150,151,152,],[-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,-79,-83,-93,-94,-95,-88,-90,-97,184,]),'ET':([50,52,55,56,57,58,88,94,95,96,97,100,101,103,143,145,146,147,148,149,150,151,188,189,190,191,192,193,],[-77,-82,-87,-89,-98,-98,-96,-78,-93,-94,-95,-91,-92,-98,-79,-83,-93,-94,-95,-88,-90,-97,218,219,220,221,222,223,]),'TO':([60,],[104,]),'SN':([61,63,106,107,108,155,264,265,266,267,268,269,],[105,-61,-62,154,-66,-67,-68,-69,-70,-63,-64,-65,]),'A':([65,67,70,],[111,115,121,]),'B':([65,67,115,],[112,116,163,]),'D':([66,67,70,],[113,117,122,]),'I':([66,67,117,],[114,118,166,]),'STRING':([71,173,],[126,126,]),'NEG':([75,],[136,]),'T':([75,],[137,]),'F':([75,],[138,]),'ELSE':([183,],[213,]),'FEC':([216,238,],[237,253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'empty':([0,2,10,49,57,58,76,95,96,97,103,115,116,117,118,152,183,185,],[2,6,15,88,100,101,15,100,101,88,88,162,164,165,167,185,212,215,]),'prinDecl':([1,],[3,]),'functionDecl':([1,],[4,]),'varList':([10,76,],[13,139,]),'var':([10,22,76,87,],[14,39,14,144,]),'statementList':([20,38,78,153,187,234,235,236,239,240,241,242,243,244,],[23,72,141,186,217,249,250,251,254,255,256,257,258,259,]),'statement':([20,23,38,72,78,141,153,186,187,217,234,235,236,239,240,241,242,243,244,249,250,251,254,255,256,257,258,259,],[24,41,24,41,24,41,24,41,24,41,24,24,24,24,24,24,24,24,24,41,41,41,41,41,41,41,41,41,]),'conditionif':([28,],[45,]),'expression':([28,59,74,79,104,156,157,],[46,102,135,142,152,188,191,]),'term':([28,51,59,74,79,80,104,156,157,],[50,94,50,50,50,143,50,50,50,]),'addingOperator':([28,46,51,59,74,79,80,89,98,99,102,104,135,142,152,156,157,188,191,],[51,80,93,51,51,51,93,93,93,93,80,51,80,80,80,51,51,80,80,]),'factor':([28,51,59,74,79,80,89,104,156,157,],[52,52,52,52,52,52,145,52,52,52,]),'factorM':([28,51,59,74,79,80,89,98,104,156,157,],[55,55,55,55,55,55,55,149,55,55,55,]),'index':([28,51,59,74,79,80,89,98,99,104,156,157,],[56,56,56,56,56,56,56,56,150,56,56,56,]),'inCaseLista':([30,],[61,]),'inCasea':([30,61,],[63,106,]),'relation':([46,49,109,110,],[79,87,156,157,]),'multiplyingOperator':([50,94,143,],[89,89,89,]),'inCaseListb':([62,],[107,]),'inCaseb':([62,107,],[108,155,]),'printTextList':([71,],[123,]),'printText':([71,173,],[124,210,]),'printvar':([71,173,],[125,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program prinDecl','program',2,'p_program','Parser.py',30),
  ('program -> program functionDecl','program',2,'p_program','Parser.py',31),
  ('program -> empty empty','program',2,'p_program','Parser.py',32),
  ('prinDecl -> DEF PRIN LPARENT RPARENT LBRACKET statementList RBRACKET SEMICOLOM','prinDecl',8,'p_prinDecl','Parser.py',44),
  ('functionDecl -> DEF ID LPARENT varList RPARENT LBRACKET statementList RBRACKET SEMICOLOM','functionDecl',9,'p_functionDecl','Parser.py',48),
  ('statementList -> statement','statementList',1,'p_statementList1','Parser.py',55),
  ('statementList -> statementList statement','statementList',2,'p_statementList2','Parser.py',61),
  ('statement -> SET ID COMMA TRUE SEMICOLOM','statement',5,'p_statement1','Parser.py',69),
  ('statement -> SET ID COMMA FALSE SEMICOLOM','statement',5,'p_statement1','Parser.py',70),
  ('statement -> SET ID COMMA expression SEMICOLOM','statement',5,'p_statement1','Parser.py',71),
  ('statement -> EXEC ID LPARENT varList RPARENT SEMICOLOM','statement',6,'p_statement2','Parser.py',78),
  ('statement -> TYPE LPARENT ID RPARENT SEMICOLOM','statement',5,'p_statement3','Parser.py',85),
  ('statement -> IF conditionif LBRACKET statementList RBRACKET empty','statement',6,'p_statement4','Parser.py',92),
  ('statement -> IF conditionif LBRACKET statementList RBRACKET ELSE LBRACKET statementList RBRACKET','statement',9,'p_statement4','Parser.py',93),
  ('statement -> FOR ID TO expression STEP NUMBER_I LBRACKET statementList RBRACKET','statement',9,'p_statement5','Parser.py',103),
  ('statement -> FOR ID TO expression empty empty LBRACKET statementList RBRACKET','statement',9,'p_statement5','Parser.py',104),
  ('statement -> EC inCaseLista SN LBRACKET statementList RBRACKET FEC SEMICOLOM','statement',8,'p_statement6','Parser.py',112),
  ('statement -> EC ID inCaseListb SN LBRACKET statementList RBRACKET FEC SEMICOLOM','statement',9,'p_statement6','Parser.py',113),
  ('statement -> SET ID DOT NEG SEMICOLOM','statement',5,'p_statement7','Parser.py',123),
  ('statement -> SET ID DOT T SEMICOLOM','statement',5,'p_statement8','Parser.py',130),
  ('statement -> SET ID DOT F SEMICOLOM','statement',5,'p_statement8','Parser.py',131),
  ('statement -> ABANICO LPARENT A RPARENT SEMICOLOM','statement',5,'p_statement9','Parser.py',138),
  ('statement -> ABANICO LPARENT B RPARENT SEMICOLOM','statement',5,'p_statement9','Parser.py',139),
  ('statement -> VERTICAL LPARENT D RPARENT SEMICOLOM','statement',5,'p_statement10','Parser.py',146),
  ('statement -> VERTICAL LPARENT I RPARENT SEMICOLOM','statement',5,'p_statement10','Parser.py',147),
  ('statement -> PERCUTOR LPARENT A empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',154),
  ('statement -> PERCUTOR LPARENT B empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',155),
  ('statement -> PERCUTOR LPARENT A B RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',156),
  ('statement -> PERCUTOR LPARENT D empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',157),
  ('statement -> PERCUTOR LPARENT I empty RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',158),
  ('statement -> PERCUTOR LPARENT D I RPARENT SEMICOLOM','statement',6,'p_statement11','Parser.py',159),
  ('statement -> GOLPE LPARENT RPARENT SEMICOLOM','statement',4,'p_statement12','Parser.py',166),
  ('statement -> VIBRATO LPARENT NUMBER_I RPARENT SEMICOLOM','statement',5,'p_statement13','Parser.py',173),
  ('statement -> METRONOMO LPARENT A COMMA NUMBER_I RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',181),
  ('statement -> METRONOMO LPARENT D COMMA NUMBER_I RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',182),
  ('statement -> METRONOMO LPARENT A COMMA NUMBER_F RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',183),
  ('statement -> METRONOMO LPARENT D COMMA NUMBER_F RPARENT SEMICOLOM','statement',7,'p_statement14','Parser.py',184),
  ('statement -> PRINT LPARENT printTextList RPARENT SEMICOLOM','statement',5,'p_statement15','Parser.py',191),
  ('printTextList -> printText','printTextList',1,'p_printTextList1','Parser.py',200),
  ('printTextList -> printTextList COMMA printText','printTextList',3,'p_printTextList2','Parser.py',205),
  ('printText -> printvar','printText',1,'p_printText','Parser.py',211),
  ('printText -> STRING','printText',1,'p_printText','Parser.py',212),
  ('printvar -> ID','printvar',1,'p_printvar','Parser.py',215),
  ('printvar -> NUMBER_I','printvar',1,'p_printvar','Parser.py',216),
  ('printvar -> NUMBER_F','printvar',1,'p_printvar','Parser.py',217),
  ('printvar -> TRUE','printvar',1,'p_printvar','Parser.py',218),
  ('printvar -> FALSE','printvar',1,'p_printvar','Parser.py',219),
  ('varList -> var','varList',1,'p_varList1','Parser.py',223),
  ('varList -> empty','varList',1,'p_varList1','Parser.py',224),
  ('varList -> varList COMMA var','varList',3,'p_varList2','Parser.py',229),
  ('var -> ID','var',1,'p_var','Parser.py',234),
  ('var -> NUMBER_I','var',1,'p_var','Parser.py',235),
  ('var -> NUMBER_F','var',1,'p_var','Parser.py',236),
  ('var -> TRUE','var',1,'p_var','Parser.py',237),
  ('var -> FALSE','var',1,'p_var','Parser.py',238),
  ('conditionif -> expression relation expression','conditionif',3,'p_conditionif','Parser.py',243),
  ('conditionif -> TRUE','conditionif',1,'p_conditionif','Parser.py',244),
  ('conditionif -> FALSE','conditionif',1,'p_conditionif','Parser.py',245),
  ('conditionif -> ID','conditionif',1,'p_conditionif','Parser.py',246),
  ('conditionif -> ID relation var','conditionif',3,'p_conditionif','Parser.py',247),
  ('inCaseLista -> inCasea','inCaseLista',1,'p_inCaseLista1','Parser.py',255),
  ('inCaseLista -> inCaseLista inCasea','inCaseLista',2,'p_inCaseLista2','Parser.py',260),
  ('inCasea -> CUANDO ID relation expression ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',265),
  ('inCasea -> CUANDO ID relation TRUE ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',266),
  ('inCasea -> CUANDO ID relation FALSE ET LBRACKET statementList RBRACKET','inCasea',8,'p_inCasea','Parser.py',267),
  ('inCaseListb -> inCaseb','inCaseListb',1,'p_inCaseListb1','Parser.py',273),
  ('inCaseListb -> inCaseListb inCaseb','inCaseListb',2,'p_inCaseListb2','Parser.py',278),
  ('inCaseb -> CUANDO relation expression ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',283),
  ('inCaseb -> CUANDO relation TRUE ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',284),
  ('inCaseb -> CUANDO relation FALSE ET LBRACKET statementList RBRACKET','inCaseb',7,'p_inCaseb','Parser.py',285),
  ('relation -> COMPARE','relation',1,'p_relation1','Parser.py',291),
  ('relation -> NE','relation',1,'p_relation2','Parser.py',296),
  ('relation -> LT','relation',1,'p_relation3','Parser.py',301),
  ('relation -> GT','relation',1,'p_relation4','Parser.py',306),
  ('relation -> LTE','relation',1,'p_relation5','Parser.py',311),
  ('relation -> GTE','relation',1,'p_relation6','Parser.py',316),
  ('expression -> term','expression',1,'p_expression1','Parser.py',321),
  ('expression -> addingOperator term','expression',2,'p_expression2','Parser.py',326),
  ('expression -> expression addingOperator term','expression',3,'p_expression3','Parser.py',331),
  ('addingOperator -> PLUS','addingOperator',1,'p_addingOperator1','Parser.py',336),
  ('addingOperator -> MINUS','addingOperator',1,'p_addingOperator2','Parser.py',341),
  ('term -> factor','term',1,'p_term1','Parser.py',346),
  ('term -> term multiplyingOperator factor','term',3,'p_term2','Parser.py',350),
  ('multiplyingOperator -> TIMES','multiplyingOperator',1,'p_multiplyingOperator1','Parser.py',355),
  ('multiplyingOperator -> DIVIDE','multiplyingOperator',1,'p_multiplyingOperator2','Parser.py',360),
  ('multiplyingOperator -> DIVIDE_E','multiplyingOperator',1,'p_multiplyingOperator3','Parser.py',365),
  ('factor -> factorM','factor',1,'p_factor1','Parser.py',370),
  ('factor -> factor MODULE factorM','factor',3,'p_factor2','Parser.py',375),
  ('factorM -> index','factorM',1,'p_factorM1','Parser.py',380),
  ('factorM -> factorM EXPONENT index','factorM',3,'p_factorM2','Parser.py',385),
  ('index -> NUMBER_I empty','index',2,'p_index1','Parser.py',390),
  ('index -> NUMBER_F empty','index',2,'p_index1','Parser.py',391),
  ('index -> addingOperator NUMBER_I','index',2,'p_index1','Parser.py',392),
  ('index -> addingOperator NUMBER_F','index',2,'p_index1','Parser.py',393),
  ('index -> addingOperator ID','index',2,'p_index1','Parser.py',394),
  ('index -> ID empty','index',2,'p_index1','Parser.py',395),
  ('index -> LPARENT expression RPARENT','index',3,'p_index2','Parser.py',403),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',408),
]
